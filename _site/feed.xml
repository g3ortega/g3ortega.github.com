<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gerardo Ortega</title>
    <description>Blog. I write about Technology, Trends, Programming, Data Science and personal opinions.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 27 Oct 2018 04:15:18 +0000</pubDate>
    <lastBuildDate>Sat, 27 Oct 2018 04:15:18 +0000</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Rails 5.1 and forward - Part 1: Yarn on Rails</title>
        <description>&lt;p&gt;Just a week ago was announced the most recent version of Ruby on Rails, one of my favorite web frameworks which I have used in many projects for over three years. There are plenty of amazing features and new changes, one of my favorite is the integration with Yarn, a great package manager tool for javascript, which is fast, secure and reliable.&lt;/p&gt;

&lt;p&gt;I’m preparing a post series to explain the main changes introduced in Rails 5.1, in this post, I’m going to address the new way to deal with Javascript using Yarn, and of course I going to write a little about Yarn in general. So let’s get started.&lt;/p&gt;

&lt;h2 id=&quot;rails-51-the-proof-of-the-maturity-of-the-ecosystem&quot;&gt;Rails 5.1, the proof of the maturity of the ecosystem&lt;/h2&gt;

&lt;p&gt;Rails 5.1 solves many of the “pending issues” of the recent years. About all, issues related to the assets management that since version 4.0 were handled by Sprockets, a gem that allowed us centralize all the process of grouping, use and compile all our assets using practical conventions.&lt;/p&gt;

&lt;p&gt;Although Sprockets do a fantastic job for most of developers, it raised some issues for others, about all when you needed to work with complex third party libraries in javascript, usually with many additional dependencies. For those cases, the maintenance of third party libraries was also a problem to such degree you usually needed to install extra gems that encapsulated all the process of integration and made easy the upgrade to newer versions of the libraries.&lt;/p&gt;

&lt;p&gt;On the other hand, many years ago a growing set of tools emerged from the javascript community to solve many of the problems the developers had to face every time they started a new javascript project, giving practical solutions to the question: How to handle packages and their dependencies in a fast and efficient manner? And that’s how many tools (like NPM, Bower, Grunt, etc.) came out. And sometimes the process of manage assets dependencies in Rails felt repetitive considering the remarkable advances in the js ecosystem for this area.&lt;/p&gt;

&lt;p&gt;It was not a surprise that when Chris McCord released Phoenix Framework two years ago, and he decided to include Brunch as asset build tool, adopting NPM as package manager. But, the Rails community showing their willingness to adopt new ways to do things if needed, decided with the release of Rails 5.1 to include Yarn as package and dependency manager for JS assets and optionally Webpack to handle module bundles and compilation. That’s a big step in the right direction towards where the web development is heading.&lt;/p&gt;

&lt;p&gt;In this post we will cover how the integration with Yarn works.&lt;/p&gt;

&lt;h2 id=&quot;introducing-yarn&quot;&gt;Introducing Yarn&lt;/h2&gt;

&lt;p&gt;Yarn is a package manager created by Facebook, and announced last year. According to Facebook, they were using NPM but as the size of their codebase and the number of engineers working on their projects grew, they ran into problems with consistency, security and performance. So they needed a tool that was fast and reliable.&lt;/p&gt;

&lt;p&gt;And the best of all is that Yarn development is supported by other companies like Google and Tilde.&lt;/p&gt;

&lt;h3 id=&quot;intaling-yarn&quot;&gt;Intaling Yarn&lt;/h3&gt;

&lt;h4 id=&quot;macos&quot;&gt;macOS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Using Homebrew&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yarn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Using MacPorts&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;port &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yarn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;windows&quot;&gt;Windows&lt;/h4&gt;

&lt;p&gt;The easiest way is to use the installer, you can find it &lt;a href=&quot;https://yarnpkg.com/latest.msi&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also use Chocolatey&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;choco &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yarn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And Scoop as well&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;scoop &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yarn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ubuntu&quot;&gt;Ubuntu&lt;/h4&gt;

&lt;p&gt;First you need to configure the repository&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; https://dl.yarnpkg.com/debian/pubkey.gpg | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/yarn.list&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally simply:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yarn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To check all went well, just check the version of yarn installed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yarn &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;using-yarn&quot;&gt;Using yarn&lt;/h3&gt;

&lt;p&gt;Now, and previous to introduce Yarn applied to the RoR context, we are going to start using Yarn independently.&lt;/p&gt;

&lt;p&gt;So, let’s start a new project using Yarn:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;yarn_test
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;yarn_test

yarn init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yarn goig to ask you for basic information about the project, like the name of the project, version, description, author, repo url, and so on.&lt;/p&gt;

&lt;p&gt;When the initialization have finished you will see a new file named package.json, which contains the data you provided before.&lt;/p&gt;

&lt;p&gt;And now we are going to proceed to add new dependencies. You have different ways to add a dependency: just using its name, or specifying its version or tag. In this case I’m just going to add a react.js package without specify the version, to get the latest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yarn add react&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And that’s it. If you check the package.js file you will find the latest version of reactjs.&lt;/p&gt;

&lt;p&gt;Optionally you can different categories of dependencies, and upgrade them or remove them. To install all dependencies of a project you just need to execute&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can check all the tree of depencies in a new file that is created after you install the first package, called yarn.lock&lt;/p&gt;

&lt;p&gt;And, since I do not want to leave this example incomplete, let’s create a react hello world app, the easy way.&lt;/p&gt;

&lt;p&gt;First of all lets install the package create-react-app, but globally to use it from the terminal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yarn global add create-react-app&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now, we can check create-react-app is working asking for his version:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;create-react-app &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If everything is Ok, let’s proceed to create our first react.js application:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;create-react-app hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, you are going to see an output similar to the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Success! Created hello_world at /Users/gerardo/opensource/yarntest/hello_world
Inside that directory, you can run several commands:

  yarn start
    Starts the development server.

  yarn run build
    Bundles the app into static files &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;production.

  yarn &lt;span class=&quot;nb&quot;&gt;test
    &lt;/span&gt;Starts the &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;runner.

  yarn run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;this, you can’t go back!

We suggest that you begin by typing:

  &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;hello_world
  yarn start

Happy hacking!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Amazing! So, let’s try our recently created app:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;hello_world
yarn start 

/////
Compiled successfully!

The app is running at:

  http://localhost:3000/

Note that the development build is not optimized.
To create a production build, use yarn run build.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, if you go to http://localhost:3000/ you will see your app up and running.&lt;/p&gt;

&lt;p&gt;Now, let’s take a look of the files generated:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;    1 gerardo  staff   80668 May 31 10:10 README.md
drwxr-xr-x  774 gerardo  staff   26316 May 31 10:18 node_modules
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;    1 gerardo  staff     374 May 31 10:10 package.json
drwxr-xr-x    4 gerardo  staff     136 May 31 10:10 public
drwxr-xr-x    8 gerardo  staff     272 May 31 10:10 src
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;    1 gerardo  staff  188529 May 31 10:10 yarn.lock

&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;package.json

&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;private&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;react&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;^15.5.4&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;^15.5.4&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;react-scripts&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;0.9.x&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;react-scripts start&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;react-scripts build&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;react-scripts test --env=jsdom&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;eject&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;react-scripts eject&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you have tried previously other package and dependency managers, you will appreciate how clean and easy was to get to this point. I will not go deeper into reactjs, maybe in a future post I’m going to address that using Yarn, but that was a taste of Yarn. I’m really glad they decided to integrate it into the Rails workflow, you can see the details in this &lt;a href=&quot;https://github.com/rails/rails/pull/26836&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;yarn-on-rails&quot;&gt;Yarn on Rails&lt;/h3&gt;

&lt;p&gt;Now let’s try to use Yarn inside a new Rails 5.1 application.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rails new yarn_test

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;yarn_test&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In addition to the normal files you see when a new rails project is generated, you will find a package.json file, and if you take a look to the assets initializer file, you will find  the following line:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Add additional assets to the asset load path.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Rails.application.config.assets.paths &amp;lt;&amp;lt; Emoji.images_path&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Add Yarn node_modules folder to the asset load path.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'node_modules'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, Rails automatically includes the directory node_modules to the assets pipeline, you just need to reference the new package you want to add, for example, let’s say we want to use the moment.js library. We need first of all install the library using Yarn:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yarn &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;moment&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can see that package.json was updated&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yarn_test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;private&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;moment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^2.18.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally we need to include the new package to application.js:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//= require moment/moment&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s all for this first part, in the second part of this series I going to address Webpack and how to use it to compile and manage javascript bundles.&lt;/p&gt;
</description>
        <pubDate>Tue, 30 May 2017 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/rails/2017/05/30/rails-5-1-and-forward-yarn-on-rails.html</link>
        <guid isPermaLink="true">http://localhost:4000/rails/2017/05/30/rails-5-1-and-forward-yarn-on-rails.html</guid>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Machine Learning: de la práctica a producción [REVIEW]</title>
        <description>&lt;p&gt;Ramanan Balakrishnan escribió un excelente &lt;a href=&quot;https://engineering.semantics3.com/2016/11/13/machine-learning-practice-to-production/&quot;&gt;post&lt;/a&gt; explicando el proceso que conlleva el flujo de trabajo de trabajo para productos orientados a inteligencia Artificial, en particular hacia Aprendizaje Automatizado o Machine Learning, ahí se plantea algunas interrogantes que vale la pena retomar cuando decidimos emprender algún proyecto orientado a AI con miras a que dicho producto sea lanzado en entorno real de producción.&lt;/p&gt;

&lt;h3 id=&quot;basura-entra-basura-sale&quot;&gt;Basura entra, basura sale&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Tengo una fuente de datos confiable? ¿Dónde obtengo mis datos?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;transformando-los-datos-en-entradas&quot;&gt;Transformando los datos en entradas&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Qué pasos de pre-procesamiento son requeribles? ¿Cómo normalizo mis datos antes de usar mis algoritmos?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ahora-iniciamos&quot;&gt;Ahora, iniciamos?&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Qué lenguaje o framework uso? Python, R, Java, C++? Caffe, Torch, Theano, TensorFlow, DL4J?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;entrenando-los-modelos&quot;&gt;Entrenando los modelos&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Cómo puedo entrenar a mis modelos? ¿Debo comprar GPUs en efectivo o usar instancias de hardware personalizadas en la nube con EC2? ¿Puedo paralelizar el procesamiento para aumentar la velocidad?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ningún-sistema-es-una-isla&quot;&gt;Ningún sistema es una isla&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Necesito hace predicciones por lotes o en tiempo real? Modelos implícitos o interfaces? RPC o REST?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;supervisión-del-rendimiento&quot;&gt;Supervisión del rendimiento&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;¿Cómo puedo dar seguimiento a mis predicciones? ¿Cómo puedo registrar los resultados en una base de datos? 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Acá la imagen que resume el proceso a seguir.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/machine_learning_desarrollo_a_produccion.png&quot; alt=&quot;Machine Learning de desarrollo a producción&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Nov 2016 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/review/2016/11/15/machine-learning-de-la-practica-a-produccion-review.html</link>
        <guid isPermaLink="true">http://localhost:4000/review/2016/11/15/machine-learning-de-la-practica-a-produccion-review.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>My Artificial Intelligence Digest - Free Learning Resources</title>
        <description>&lt;h2 id=&quot;resources-to-learn-artificial-intelligence&quot;&gt;Resources to Learn Artificial Intelligence&lt;/h2&gt;

&lt;p&gt;So, you’re looking for useful resources to start with AI and Machine Learning, if that’s the case I have compiled a list of resources to learn about this topics. And I will keep it updated.&lt;/p&gt;

&lt;h2 id=&quot;artificial-intelligence-learning-resources&quot;&gt;Artificial Intelligence Learning Resources&lt;/h2&gt;

&lt;h3 id=&quot;mit&quot;&gt;MIT&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi&quot; target=&quot;_blank&quot;&gt;MIT 6.034 Artificial Intelligence, Fall 2010&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;uc-berkeley&quot;&gt;UC Berkeley&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://ai.berkeley.edu/lecture_videos.html&quot; target=&quot;_blank&quot;&gt;Class web page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCB4_W1V-KfwpTLxH9jG1_iA/videos&quot; target=&quot;_blank&quot;&gt;Video Lectures&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-learning-learning-resources&quot;&gt;Machine Learning Learning Resources&lt;/h2&gt;

&lt;h3 id=&quot;stanford&quot;&gt;Stanford&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/view_play_list?p=A89DCFA6ADACE599&quot; target=&quot;_blank&quot;&gt;Machine Learning Class&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lagunita.stanford.edu/courses/HumanitiesSciences/StatLearning/Winter2016/about&quot; target=&quot;_blank&quot;&gt;Statistical Learning&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;udacity&quot;&gt;Udacity&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.udacity.com/course/intro-to-machine-learning--ud120&quot; target=&quot;_blank&quot;&gt;Intro to Machine Learning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.udacity.com/course/machine-learning-for-trading--ud501&quot; target=&quot;_blank&quot;&gt;Machine Learning for Trading&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;university-of-washington&quot;&gt;University of Washington&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/ml-foundations&quot; target=&quot;_blank&quot;&gt;Machine Learning Foundations: A Case Study Approach&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/course/machlearning&quot; target=&quot;_blank&quot;&gt;Machine Learning: Build Intelligent Applications&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;carnegie-mellon-university&quot;&gt;Carnegie Mellon University&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=m9OBcqAcr_w&amp;amp;list=PLZSO_6-bSqHQCIYxE3ycGLXHMjK3XV7Iz&quot; target=&quot;_blank&quot;&gt;Machine Learning Summer School&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;deep-learning&quot;&gt;Deep Learning&lt;/h2&gt;

&lt;h3 id=&quot;google-deep-learning-class---udacity&quot;&gt;Google Deep Learning Class - Udacity&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.udacity.com/course/deep-learning--ud730&quot; target=&quot;_blank&quot;&gt;Deep Learning by Google&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;neural-networks&quot;&gt;Neural Networks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/course/neuralnets&quot; target=&quot;_blank&quot;&gt;Neural Networks | University of Toronto&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;papers&quot;&gt;Papers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~tom/pubs/MachineLearning.pdf&quot; target=&quot;_blank&quot;&gt;The Discipline of Machine Learning | Tom M. Mitchell&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf&quot; target=&quot;_blank&quot;&gt;A Few Useful Things to Know about Machine Learning | Pedro Domingos&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tooling-and-other-resources&quot;&gt;Tooling and other resources&lt;/h2&gt;

&lt;h3 id=&quot;apache-spark&quot;&gt;Apache Spark&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.edx.org/xseries/data-science-engineering-apache-spark&quot; target=&quot;_blank&quot;&gt;Apache Spark Specialization&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-moocs-related&quot;&gt;Other MOOCs related&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/course/mmds&quot; target=&quot;_blank&quot;&gt;Mining Massive Datasets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/recommender-systems&quot; target=&quot;_blank&quot;&gt;Introduction to Recommender Systems&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jun 2016 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/ai/2016/06/14/my-artificial-intelligence-digest.html</link>
        <guid isPermaLink="true">http://localhost:4000/ai/2016/06/14/my-artificial-intelligence-digest.html</guid>
        
        
        <category>ai</category>
        
      </item>
    
      <item>
        <title>Crystal (Lenguaje de Programación), el porqué y el cómo</title>
        <description>&lt;p&gt;Crystal es uno de los nuevos lenguajes en la escena. Aunque no tan conocido como Rust, Elixir o Julia, tiene mucho que ofrecer. Inicio en 2012, y según describen sus creadores, sus características principales son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sintaxis similar a Ruby&lt;/li&gt;
  &lt;li&gt;Estáticamente tipado&lt;/li&gt;
  &lt;li&gt;Compilado&lt;/li&gt;
  &lt;li&gt;Self-hosted (Crystal está escrito en… crystal)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ademas de eso, el propósito del lenguaje es simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tener una sintaxis amigable con Ruby, pero con un performance tan bueno como C.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hay muchas más características disponibles en el sitio web oficial. Pero en particular lo que me ha llamado la atención a mí en particular, siendo un desarrollador que ama Ruby, es su similitud con el lenguaje. Tener una sintaxis tan buena como Ruby y un performance semejante al de C, es el santo grial en ésta área.&lt;/p&gt;

&lt;h2 id=&quot;sintaxis-de-crystal&quot;&gt;Sintaxis de Crystal&lt;/h2&gt;

&lt;p&gt;Quiero comenzar con la sintaxis que es la cara del lenguaje. Cuando inicie con Ruby, viniendo de Java, lo que más me cautivo fue la simplicidad con la cual se hacían las cosas, era como escribir en pseudocódigo. Y con Crystal no es la excepción, si bien no es 100% igual a Ruby (más para bien que para mal), conserva su esencia. A continuación por ejemplo les dejo el código de un servidor HTTP:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http/server&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello world! The time is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Listening on http://0.0.0.0:8080&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;más-allá-de-la-sintaxis&quot;&gt;Más allá de la sintaxis&lt;/h2&gt;

&lt;p&gt;Crystal corre sobre la LLVM, una tecnología que sirve como framework de compilación y puede generar código de maquina con un performance similar (o en ocasiones superior) a C. LLVM también es usado por otros nuevos lenguajes como Rust o Swift y ofrece una enorme flexibilidad, soporte y muchas libretas complementarias. Ésto ha permitido a Crystal agregar features de las cuales Ruby carece, como concurrencia y paralelismo, éste último cabe destacar que está en desarrollo.&lt;/p&gt;

&lt;p&gt;Ahora bien, aclaro que Crystal como lenguaje no pone ninguna innovación sobre la mesa que otros lenguajes no tengan ya. En otras palabras, el diseño de muchos de los nuevos lenguajes que han surgido recientemente, ha ido orientado a extender o crear mejores maneras de hacer algunas cosas. Crystal por el contrario, en una buena medida ha tratado de integrar muchos de los mejores features de algunos lenguajes como Go o Erlang. Lo que Crystal si ofrece y que no debe ser pasado por alto, es una elegante sintaxis, más un excelente performance, eso sin tener que reaprender muchas cosas, lo cual lo hace único, productivo y agradable para trabajar con él.&lt;/p&gt;

&lt;h2 id=&quot;aprendiendo-crystal&quot;&gt;Aprendiendo Crystal&lt;/h2&gt;

&lt;p&gt;Acá una lista de recursos que pueden ayudarte a iniciar con el lenguaje, cabe destacar que siendo un lenguaje joven no hay mucho disponible, pero las cosas van mejorando con el tiempo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://crystal-lang.org/docs/&quot;&gt;La documentación oficial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://crystal-lang.org/api/&quot;&gt;Documentación del API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/veelenga/awesome-crystal&quot;&gt;Lista de librerias en Github para uso o bien para aprender del código&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;el-futuro-de-crystal&quot;&gt;El futuro de Crystal&lt;/h2&gt;

&lt;p&gt;Ok, soy Ingeniero de Software, no adivino. Pero puedo hacer mis propias apuestas acerca del futuro de Crystal, sobretodo considerando lo que me ha cautivado y aquello que llena muchos de los vacíos que Ruby en la actualidad tiene, por mencionar algunos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Concurrencia&lt;/li&gt;
  &lt;li&gt;Performance&lt;/li&gt;
  &lt;li&gt;Paralelismo (en proceso)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y eso, en mi caso, es de suma importancia. Después de todo, los tiempos han cambiado, así como nuestras necesidades. Vivimos en el tiempo del Big Data, del Internet of Things, del VR, etc. Particularmente una de las áreas que más ha llamado mi atención es Inteligencia Artificial, y cada vez necesito herramientas con un excelente performance, pero tradicionalmente se tiene que escoger dos tecnologías, una para el modelado (Python o R por ejemplo) y otra para la implementación (C, C++ o incluso Java) por razones obvias. En cambio con un lenguaje como Crystal es la panacea, no es necesario duplicar esfuerzos.&lt;/p&gt;

&lt;p&gt;En éste sentido he probado también un lenguaje nuevo que está especialmente diseñado con performance y productividad en mente aplicado a computación científica: Julia. Sin embargo, no quiero un lenguaje de nicho, sino uno que me ayude a brindar soluciones en diferentes ámbitos (o algo así como Python con todas sus librerías, pero con el performance de C :p).&lt;/p&gt;

&lt;p&gt;Por eso tengo mis apuestas en Crystal, un lenguaje todavía en pañales, pero con mucho potencial de crecimiento, tiene todo lo necesario para eso. Ruby no fue todo el tiempo popular, sino hasta después de Rails, lo mismo puede pasar con cualquier lenguaje de programación. La clave está en la comunidad en torno al lenguaje, quienes se encargan de hacer que las cosas sucedan. De mi parte pienso contribuir en el área que me apasiona.&lt;/p&gt;

</description>
        <pubDate>Fri, 10 Jun 2016 09:43:59 +0000</pubDate>
        <link>http://localhost:4000/programming_languages/2016/06/10/crystal-lenguaje-de-programacion-el-por-que-y-el-como.html</link>
        <guid isPermaLink="true">http://localhost:4000/programming_languages/2016/06/10/crystal-lenguaje-de-programacion-el-por-que-y-el-como.html</guid>
        
        
        <category>programming_languages</category>
        
      </item>
    
      <item>
        <title>¿Qué es Machine Learning y porqué éste es el mejor tiempo para comenzar a aprender del tema?</title>
        <description>&lt;h2 id=&quot;introducción-a-machine-learning&quot;&gt;Introducción a Machine Learning&lt;/h2&gt;

&lt;p&gt;Machine Learning (ML o Aprendizaje de Máquinas) es una de las tecnologías más impactantes que han (re)surgido en los últimos 10 años. Impulsada principalmente por el crecimiento exponencial de los datos producidos por las personas que hacen uso de muchas tecnologías relacionadas a internet y más recientemente por objetos que interactúan con nuestro entorno (el internet de las cosas) los cuales constantemente están recopilado y enviando datos a centros masivos de almacenamiento, que cabe destacar,han sido una parte fundamental en la expansión que ha tenido ML en años recientes. Después de todo, hoy en día disponemos de suficiente poder de cómputo a un precio accesible para extraer patrones de conjuntos masivos de datos (Big Data) y obtener valiosa información de los mismos.&lt;/p&gt;

&lt;p&gt;Simplificando las cosas podemos decir que ML es un término que hace referencia a un conjunto de algoritmos que aprenden usando datos pasados para crear predicciones, simulaciones o análisis. Éstos algoritmos una vez programados se representan a manera de árboles de decisiones, redes neuronales, etc. Ok, esa definición no fue muy académica que digamos, así que a continuación agrego otras dos más acertadas.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Arthur Samuel (1954) Machine Learning: Área de estudio que les da a las computadoras la abilidad de aprender sin necesidad de ser explicitamente programadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si, esa definición no es muy nueva, pero en el ámbito de las ciencias de la computación ¿qué lo es?. Constantemente nos venden ideas como novedosas, cuando en realidad fueron inventadas o teorizadas hace mucho. Pero para una definición un tanto más moderna (y más técnica también), te dejo ésta a continuación:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tom Mitchell (1998) Well-posed Learning Problem: a un programa de computadora se le indica aprender de la experiencia E con respecto a alguna tarea T y alguna medida de desempeño P, si su rendimiento sobre T, medido por P, mejora con la experiencia de E.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lo sé. Suena a acertijo, pero espera, antes que dejes éste post y digas que ésto de Machine Learning sólo es para geeks, nerds o gente loca con mucho tiempo libre. Te puedo garantizar que con un poco de conocimiento del tema te hará sentido y a continuación detallaré el porque y el uso de ML en el mundo real.&lt;/p&gt;

&lt;h2 id=&quot;uso-de-machine-learning&quot;&gt;Uso de Machine Learning&lt;/h2&gt;

&lt;p&gt;Las aplicaciones de ML desde ya nos afectan a todos de una manera u otra. Desde el buscador que usamos, hasta el reconocimiento facial de nuestras modernas cámaras, y sin mencionar las recomendaciones hechas a medida que muchos servicios de comercio electrónico como Amazon nos hacen cada día. ML está en todos lados. Y la tendencia es que en el futuro se encuentren incluso más aplicaciones de las ya conocidas en la actualidad.&lt;/p&gt;

&lt;h2 id=&quot;cómo-y-dónde-aprendo-sobre-machine-learning&quot;&gt;¿Cómo y dónde aprendo sobre Machine Learning?&lt;/h2&gt;

&lt;p&gt;Lo primero es realmente tener la motivación de aprender más sobre el tema. El presente post lo quiero dejar breve, pero no quedo contento con lo poco que he profundizado sobre las beneficios que conlleva aprender un poco de ML, sin embargo éste no será el último post sobre el tema. Así que puedes estar seguro que semana a semana encontrarás algo nuevo en el blog relacionado a ML y sobretodo ejemplos, guías y tutoriales prácticos que te muestren el verdadero potencial de ML. Pero, por supuesto, te dejaré antes con una lista de los que para mí mejores recursos para aprender y profundizar sobre el tema, y lo mejor de todo es que son recursos completamente gratuitos, pero de enorme calidad.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Con seguridad necesitarás repasar o aprender un poco de matemáticas, sobretodo Algrebra lineal y algo de integrales y derivadas. Para ello recomiento una seríe de cursos de la Universidad Politécnica de Valencia que abarca todo lo que necesitas y lo puedes encontrar &lt;a href=&quot;https://www.edx.org/xseries/bases-matematicas-para-estudiar&quot;&gt;acá&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Mi primera recomendación y uno de los mejores cursos que puedes llevar sobre el tema es el curso de Andrew Ng de la Universidad de Stanford, disponible en Coursera. Puedes acceder &lt;a href=&quot;https://www.coursera.org/learn/machine-learning&quot;&gt;aquí&lt;/a&gt;. La ventaja del curso en cuestión es que tiene subtítulos disponibles en Español, pero siendo francos, sino tienes un buen nivel de lectura y comprensión del inglés y quieres avanzar en ésta área, se te hará más difícil.&lt;/li&gt;
  &lt;li&gt;Siguiendo con Andrew Ng, hay un playlist completo sobre el tema en YouTube, donde se le ha grabado durante sus clases en Stanford y contiene mucha de la base teórica &lt;a href=&quot;https://www.youtube.com/view_play_list?p=A89DCFA6ADACE599&quot;&gt;aqui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Otro de mis cursos favoritos en línea y uno de los mejores para introducirte a éste mundo es &lt;a href=&quot;https://www.edx.org/course/analytics-edge-mitx-15-071x-2&quot;&gt;The Analytics Edge&lt;/a&gt; creado por el MIT. Lo recomiendo para iniciar sino tienes una base previa.&lt;/li&gt;
  &lt;li&gt;A cómo irás viendo en la medida que avances, la estadística es algo requerible cuando se trabaja con ML, y en ese sentido éste libro de Stanford nunca viene mal &lt;a href=&quot;http://statweb.stanford.edu/~tibs/ElemStatLearn/&quot;&gt;The Elements of Statistical Learning: Data Mining, Inference, and Prediction.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con el tiempo iré añadiendo más recursos a éste post, por ahora me parece un buen inicio con los recursos que he publicado.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2016 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/machine_learning/2016/06/10/que-es-machine-learning-y-porque-este-es-el-mejor-tiempo-para-comenzar-a-aprender-del-tema.html</link>
        <guid isPermaLink="true">http://localhost:4000/machine_learning/2016/06/10/que-es-machine-learning-y-porque-este-es-el-mejor-tiempo-para-comenzar-a-aprender-del-tema.html</guid>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Wit.ai, el arma secreta de Facebook</title>
        <description>&lt;p&gt;Facebook tiene claros sus objetivos y por eso el mismísimo Mark Zuckerberg presentó en el último F8 (el evento anual en el que presentan sus novedades) sus planes para un periodo de 10 años, de los cuales ya casi vamos por la mitad. Los primeros cinco años se enfocan en los servicios y productos que ya conocemos: Facebook, Messenger, Instagram, WhatsApp…, pero los siguientes 5 años incluyen tres interesantes categorías: conectividad, inteligencia artificial y realidad virtual.&lt;/p&gt;

&lt;p&gt;De las tres categorías que tendrán el mayor peso dentro de la estrategia de Facebook para los próximos cinco años, la que más me ha llamado la atención es Inteligencia Artificial, porque desde ya, a diferencia de las otras dos, les está generando ganancias y es una parte integral de los productos que actualmente tienen en el mercado. Así que lo único que les hace falta es lanzar muchos de los productos internos como un servicio más. Y claro, era de esperarse que una empresa como Facebook no se quedara cruzada de brazos mientras tanto, y ha comenzado a adquirir empresas y a contratar talento relacionado con esa área. Aunque muchos de éstos movimientos que el gigante de las redes sociales ha hecho han pasado desapercibidos. Y hoy quiero hablar puntualmente de uno: &lt;a href=&quot;https://wit.ai/&quot; title=&quot;Go to Wit.ai&quot; target=&quot;blank&quot;&gt;Wit.ai&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;qué-es-witai&quot;&gt;¿Qué es Wit.ai?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wit.ai/&quot; title=&quot;Go to Wit.ai&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/wit_ai_fb.png&quot; alt=&quot;wit-ai-fb&quot; title=&quot;Wit.ai y Facebook&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wit.ai es un servicio (adquirido por FB el año pasado) que pretende llevar el Procesamiento de Lenguage Natural (o NLP) a las masas (ok, sin exagerar, a la mayoría de desarrolladores que no conocen mucho de inteligencia artificial o simplemente no tienen tiempo para desarrollar su propia plataforma para NLP), permitiendo crear prácticas aplicaciones en cuestión de minutos (si, no estoy bromeando), por ejemplo:&lt;/p&gt;

&lt;h3 id=&quot;desarrollo-de-bots&quot;&gt;Desarrollo de bots&lt;/h3&gt;

&lt;p&gt;Ahora está de moda crear bots para diferentes plataformas (Slack, FB Messenger, Telegram, etc), con Wit.ai podrás crear un bot que sea autónomo y que aprenda con el tiempo. Tiene una interfaz especialmente diseñada para simplificar el proceso de creación del mismo, y varios SDK para que lo integres con tu lenguaje favorito, eso sin mencionar que tienen una excelente documentación para su API.&lt;/p&gt;

&lt;h3 id=&quot;sistemas-de-toma-de-decisiones&quot;&gt;Sistemas de toma de decisiones&lt;/h3&gt;

&lt;p&gt;Si, muchas veces te encuentras casos en los que dada una entrada (un tweet, un comando de voz, un mensaje, etc.) debes tomar X o Y decisión para ejecutar una determinada acción. Dependiendo de la complejidad de lo que necesites Wit.ai puede ayudar también, permitiéndote analizar las entradas, extraer los datos que necesitas y tomar decisiones o tomar determinadas acciones.&lt;/p&gt;

&lt;h3 id=&quot;reconocimiento-de-voz&quot;&gt;Reconocimiento de voz&lt;/h3&gt;

&lt;p&gt;Wit.ai fue pensado para responder a la creciente demanda de interpretar y responder a comandos de voz. Ésto de cara a la tendencia creciente de tener interconectado todo (Internet of Things), resulta muy útil. Por ejemplo, usando Wit.ai puedes automatizar acciones en tu hogar, como el encendido o apagado de las luces, únicamente usando tu voz y programando la interacción con el sistema de ilumación.&lt;/p&gt;

&lt;h3 id=&quot;automatización&quot;&gt;Automatización&lt;/h3&gt;

&lt;p&gt;Éste es otro tema muy de moda, después de todo vivimos en la época del internet de las cosas: todo está conectado, hay sensores por todos lados y genialidades como Arduino nos hacen todavía las cosas más sencillas, sin embargo, los elementos con los que interactuamos no son necesariamente “inteligentes”, pero Wit.ai puede tomar ciertos datos, interpretarlos y tomar decisiones en base a eso.&lt;/p&gt;

&lt;p&gt;Esas son algunas de las aplicaciones que tiene éste servicio. Lo sé, pareciera un anuncio pagado, pero hay que llamar a lo bueno por su nombre. Y ahora, veamos más allá, en realidad el punto que quiero resaltar acá es que cada vez la Inteligencia Artificial irá acaparando nuevas áreas, y que las organizaciones o individuos que no saquen provecho de éstas tecnologías se quedarán un paso atrás de la competencia. En unos años prescindir de AI será el equivalente a no tener un sitio web hoy en día.&lt;/p&gt;

&lt;p&gt;Ésto ha sido solo una probadita, la próxima semana estaré publicando un tutorial y un ejemplo de creación de un bot para Facebook Messenger usando Wit.ai.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jun 2016 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/ai/2016/06/08/wit-ai-el-arma-secreta-de-facebook.html</link>
        <guid isPermaLink="true">http://localhost:4000/ai/2016/06/08/wit-ai-el-arma-secreta-de-facebook.html</guid>
        
        <category>facebook_bots,</category>
        
        <category>AI,</category>
        
        <category>NLP</category>
        
        
        <category>ai</category>
        
      </item>
    
      <item>
        <title>Welcome (Again)</title>
        <description>&lt;p&gt;Well, It has been a long time since I wrote the last post in my blog (&lt;a href=&quot;http://blog.g3ortega.com&quot;&gt;the spanish version&lt;/a&gt;). I think over two years have passed, and well, in two years many things happen.&lt;/p&gt;

&lt;p&gt;I decided it’s time to start to write again. I love writing and is something that comes easily to me. So, What have changed in the last years? What are my plans for the future?.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is nothing more constant than change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think it’s important to keep our skills sharp. Several years ago, when I started  programming, by that time, with Java, I was amazed for the things I could achieve with just a computer, some logic and the knowledge of a programming language. In that time I didn’t consider some aspects related to the software development process like maintainability or scalability. I just wanted to create things. I just needed the tools to bring my ideas to life. So, I started to learn Java on my own (I hated the related classes I received the first years in college). And with the right attitude I succeed. In parallel I begin to work in a project as intern in college with some classmates. Soon I realize about the complexity that can have a real world application, and about all, I realize that one of the main challenges in development is to handle the constant changes while you keep the productivity of the team, and the maintainability, extensibility and performance of your code.&lt;/p&gt;

&lt;p&gt;I started to look for new approaches to software development and to investigate how many big companies like Google, handle the change and kept the agility of their teams while they preserved the quality of their code bases. That search leads me to agile development practices and versatiles programming languages like python.&lt;/p&gt;

&lt;p&gt;I begin to learn python, and at that time, I shared my new findings with a good friend, only to realize that he was on the same road. But he took it even further, and introduce me Ruby on Rails, and some good practices that accompany that amazing web framework. And then I begin to learn Rails. I was so motivated that I created a little application all the weeks for a couple of months.&lt;/p&gt;

&lt;p&gt;I commenced to use Ruby and Ruby on Rails for more serious projects, and I’m still using it. But we are in 2015, and as I said before, many things have changed. I would have liked someone talked me about Rails many years before. I love the entire ecosystem of ruby. I can focus in the solution of my problems instead of dealing with problems related to over configurations, verbosity, lack of conventions, bad practices, etc.&lt;/p&gt;

&lt;p&gt;As time have changed, the world of development face different challenges, and I think we need to explore new alternatives to some technologies that we use nowadays. It’s not only ruby, but many other languages that have limits when it comes to solving challenges like concurrency, real time, fault tolerance, productivity, performance, big data, etc. The problem has been that many technologies offer a good solution to some challenges, but lack of the features to face other ones.&lt;/p&gt;

&lt;p&gt;So, we get to the point, the next years I want to focus in learning and applying new technologies that help me to face and solve some problems of the “new web”. This blog will be part of that journey. But no matter how much I can learn in the next years, It will not be enough. The progress in this area moves at light speed, so to speak. Maybe in this moment, somewhere, a new ones are inventing The Next Big Thing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The more I learn, the more I realize how much I don’t know.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Therefore I need to think well what to focus for the next years. The things I really want to learn and use. All aligned with my personal goals for the next years. I’m working on that, but I just want to share a little summary of a kind of plan for the next year, that I will be publishing here.&lt;/p&gt;

&lt;h2 id=&quot;2016&quot;&gt;2016&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Web applications: Real time everywhere&lt;/p&gt;

    &lt;p&gt;Real time stop being the fancy feature of interactive dashboards to become a requirement of the new web and mobile applications.&lt;/p&gt;

    &lt;p&gt;To focus: Elixir/Phoenix, Rails/ActionCable&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FrontEnd: Virtual DOM and Components are eating the world&lt;/p&gt;

    &lt;p&gt;Big companies has started to write a reusable front-end through components. And since the release of ReactJs many other Js frameworks like ember.js has started to implement their own version of Virtual DOM, a DOM abstraction that brings to the table of JS frameworks a great performance and a simpler programming model.&lt;/p&gt;

    &lt;p&gt;To focus: ReactJs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mobile: Look mom, is native and use JS! -Wooot!&lt;/p&gt;

    &lt;p&gt;React Native was a game changer. Before it was launched you only could not achieve a native like behavior using Js/HTML frameworks over there. You have to choose between a good user experience or better productivity using HTML5 (and including all you team that in the worst case unless they know basic HTML). But, with React Native you just need to learn React and some native components to start doing your next mobile app.&lt;/p&gt;

    &lt;p&gt;To focus: React Native, ReactJs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Backend: Scalability first and no downtimes.&lt;/p&gt;

    &lt;p&gt;Scalability is on demand. Now we have no only clients on simple browsers, but we have to handle mobile devises, hybrid desktop apps, the internet of things, etc etc. So, the traditional way to build apps is over, we need to take to the table apps with scalability and reliability in mind.&lt;/p&gt;

    &lt;p&gt;To focus: Elixir&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SysAdmin: Containers, the new way of sysadmin&lt;/p&gt;

    &lt;p&gt;To focus: Docker / CoreOS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DataScience: Data is eating the world&lt;/p&gt;

    &lt;p&gt;To focus: R and Spark.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 18 Nov 2015 08:43:59 +0000</pubDate>
        <link>http://localhost:4000/self/2015/11/18/welcome-again.html</link>
        <guid isPermaLink="true">http://localhost:4000/self/2015/11/18/welcome-again.html</guid>
        
        <category>welcome</category>
        
        
        <category>Self</category>
        
      </item>
    
  </channel>
</rss>
